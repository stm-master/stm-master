// LCD Pins on PORTB
sbit LCD_RS at GPIOB_ODR.B1;
sbit LCD_EN at GPIOB_ODR.B2;
sbit LCD_D4 at GPIOB_ODR.B12;
sbit LCD_D5 at GPIOB_ODR.B13;
sbit LCD_D6 at GPIOB_ODR.B14;
sbit LCD_D7 at GPIOB_ODR.B15;

char txt[16];
unsigned int adc_voltage, adc_current;
float voltage, current, power;
float vout;

// Manual ADC Initialization
void ADC_Manual_Init() {
    RCC_APB2ENR |= (1 << 2);   // GPIOA clock
    RCC_APB2ENR |= (1 << 9);   // ADC1 clock
    GPIOA_CRL &= ~(0xF << 0);
    GPIOA_CRL |= (0x0 << 1);
    GPIOA_CRL &= ~(0xF << 4);
 GPIOA_CRL |= (0x0 << 1);

    ADC1_CR2 |= (1 << 0);      // ADC on
    ADC1_CR2 |= (1 << 1);      // Continuous mode
    ADC1_CR2 |= (1 << 20);     // Calibration
}

// ADC Channel Reader
unsigned int ADC_Read(unsigned char channel) {
    ADC1_SQR3 = channel;
    ADC1_CR2 |= (1 << 22);     // Start conversion
    while (!(ADC1_SR & (1 << 1)));  // Wait for end of conversion
    return ADC1_DR;
}

void main() {
    // Init LCD Pins
    GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_1 | _GPIO_PINMASK_2 |
                                        _GPIO_PINMASK_12 | _GPIO_PINMASK_13 |
                                        _GPIO_PINMASK_14 | _GPIO_PINMASK_15);

    ADC_Manual_Init();
    Lcd_Init();
    Delay_ms(100);
    Lcd_Cmd(_LCD_CLEAR);
    Lcd_Cmd(_LCD_CURSOR_OFF);

    while(1) {
        Lcd_Cmd(_LCD_CLEAR);

        // Read voltage from PA0 (channel 0)
        adc_voltage = ADC_Read(0);
        voltage = (adc_voltage * 3) / 4095.0;  // ADC to Volts (0â€“3.3V)
        voltage *= 2.0;  // Compensate for 10k:10k divider (divide by 2 ? multiply back)

        // Read current from PA1 (channel 1)
        adc_current = ADC_Read(1);
        vout = (adc_current * 3) / 4095.0;  // Convert to volts
        current = (vout - 2.5) / 0.185;             // ACS712 05B sensitivity

        // Calculate power
        power = voltage * current;

        // Display on LCD
        Lcd_Out(1, 1, "V:");
        FloatToStr(voltage, txt);
        txt[5] = 0;
         Lcd_Out(1, 3, txt);
        Lcd_chr(1, 8, 'V');

        Lcd_Out(1, 9, "I:");
        FloatToStr(current, txt); 
        txt[5] = 0;
        Lcd_Out(1, 11, txt);
        Lcd_chr(1, 16, 'A');

        Lcd_Out(2, 1, "P:");
        FloatToStr(power, txt); Lcd_Out(2, 3, txt);

        Delay_ms(1000);
    }
}